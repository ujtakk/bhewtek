`timescale 1ns/1ps

module test_ctrl_core();
`include "parameters.vh"
<%- load "parameters.rb" -%>

  /*AUTOREGINPUT*/

  /*AUTOWIRE*/

  //clock
  always
  begin
    clk = 0;
    #(STEP/2);
    clk = 1;
    #(STEP/2);
  end

  //flow
  initial
  begin
    xrst = 0;
    #(STEP);
    xrst = 1;
    req = 0;
    in_begin = 0;
    in_valid = 0;
    in_end = 0;
    input_addr = 0;
    weight_addr = 0;
    output_addr = 0;
    total_out = 0;
    total_in = 0;
    img_size = 0;
    fil_size = 0;
    #(STEP);
    req = 1;
    total_out = 50;
    total_in = 20;
    img_size = 12;
    fil_size = 5;
    <%- 7.times do -%>
    #(STEP*3500);
    in_end = 1;
    <%- end -%>
    //while (!ack) #(STEP);
    #(STEP*5);
    $finish();

  end

  //display
  always
  begin
    #(STEP/2-1);
    $display(
      "%5d: ", $time/STEP,
      "%d ", dut0.r_state,
      "%d ", dut0.r_count_out,
      "%d ", dut0.r_count_in,
      "| ",
      "%d ", xrst,
      "%d ", req,
      "%d ", in_begin,
      "%d ", in_valid,
      "%d ", in_end,
      "%d ", input_addr,
      "%d ", weight_addr,
      "%d ", output_addr,
      "%d ", total_out,
      "%d ", total_in,
      "%d ", img_size,
      "%d ", fil_size,
      "| ",
      "%d ", ack,
      "%d ", out_begin,
      "%d ", out_valid,
      "%d ", out_end,
      "%d ", mem_input_addr,
      "%d ", mem_weight_addr,
      "%d ", mem_output_we,
      "%d ", mem_output_addr,
      "%d ", first_input,
      "| ",
      "%d ", dut0.r_weight_x,
      "%d ", dut0.r_weight_y,
      "%d ", dut0.r_bias,
      "%d ", dut0.r_input_x,
      "%d ", dut0.r_input_y,
      "| ",
      "%d ", dut0.s_weight_end,
      "%d ", dut0.s_input_end,
      "%d ", dut0.s_output_end,
    );
    #(STEP/2+1);
  end

  ctrl_core dut0(/*AUTOINST*/);

endmodule

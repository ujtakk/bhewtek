module conv_tree(/*AUTOARG*/);
`include "parameters.vh"
<%- load "parameters.rb" -%>

   /*AUTOINPUT*/
   input clk;
   input xrst;
   <%- for i in 0...$fsize**2 -%>
   input signed [DWIDTH-1:0] pixel<%=i%>;
   input signed [DWIDTH-1:0] weight<%=i%>;
   <%- end -%>

   /*AUTOOUTPUT*/
   output [DWIDTH-1:0] fmap;

   /*AUTOWIRE*/
   <%- for i in 0...24 -%>
   wire signed[DWIDTH-1:0]   sum<%=i%>;
   <%- end -%>
   <%- for i in 0...$fsize**2 -%>
   wire signed[2*DWIDTH-1:0]   pro<%=i%>;
   wire signed [DWIDTH-1:0]    pro_short<%=i%>;
   <%- end -%>

   /*AUTOREG*/
   reg signed[DWIDTH-1:0]    r_fmap;
   <%- for i in 0...$fsize**2 -%>
   reg signed [DWIDTH-1:0]   r_pixel<%=i%>;
   <%- end -%>
   <%- for i in 0...$fsize**2 -%>
   reg signed [DWIDTH-1:0]   r_weight<%=i%>;
   <%- end -%>
   <%- for i in 0...24 -%>
   reg signed [DWIDTH-1:0] r_sum<%=i%>;
   <%- end -%>
   <%- for i in 1...5 -%>
   reg signed [DWIDTH-1:0] pro_short24_d<%=i%>;
   <%- end -%>

   <%- for i in 0...$fsize**2 -%>
   assign pro<%=i%> = (r_pixel<%=i%> * r_weight<%=i%>);
   <%- end -%>
   <%- for i in 0...$fsize**2 -%>
   assign pro_short<%=i%> = $signed({pro<%=i%>[22],pro<%=i%>[22:8]});
   <%- end -%>
   assign sum0 = r_sum1 + r_sum2;
   assign sum1 = r_sum3 + r_sum4;
   assign sum2 = r_sum5 + pro_short24_d3;
   <%- for i in 3...12 -%>
   assign sum<%=i%> = r_sum<%=2*i+1%> + r_sum<%=2*i%>;
   <%- end -%>
   <%- for i in 6...12 -%>
   //assign sum<%=i%> = sum<%=2*i+1%> + sum<%=2*i%>;
   <%- end -%>
   <%- for i in 12...24 -%>
   assign sum<%=i%> = pro_short<%=2*i-23%> + pro_short<%=2*i-24%>;
   <%- end -%>

   <%- for i in 1...5 -%>
   always @(posedge clk)
       <%- if i == 1 -%>
       pro_short24_d<%=i%> <= pro_short24;
       <%- else -%>
       pro_short24_d<%=i%> <= pro_short24_d<%=i-1%>;
       <%- end -%>
   <%- end -%>
   <%- for i in 0...24 -%>
   always @(posedge clk)
       r_sum<%=i%> <= sum<%=i%>;
   <%- end -%>

   <%- for i in 0...$fsize**2 -%>
   always @(posedge clk or negedge xrst)
     if(!xrst)
       r_pixel<%=i%> <= 0;
     else
       r_pixel<%=i%> <= pixel<%=i%>;

   <%- end -%>

   <%- for i in 0...$fsize**2 -%>
   always @(posedge clk or negedge xrst)
     if(!xrst)
       r_weight<%=i%> <= 0;
     else
       r_weight<%=i%> <= weight<%=i%>;

   <%- end -%>
   assign fmap = r_fmap;

   always @(posedge clk or negedge xrst)
     if(!xrst)
       r_fmap <= 0;
     else
       r_fmap <= sum0;

endmodule

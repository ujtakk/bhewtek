% load "parameters.rb"

module core_hash(/*AUTOARG*/);
`include "parameters.vh"

  /*AUTOINPUT*/

  /*AUTOOUTPUT*/

  /*AUTOWIRE*/

  /*AUTOREG*/

  // AUTO_CONSTANT (DWIDTH)

  /* hash_conv AUTO_TEMPLATE (
      .fmap       (result[DWIDTH-1:0]),
      .wreg_we    (wreg_we),
      .hreg_we    (hreg_we),
      .read_data  (read_weight[DWIDTH-1:0]),
      .hash_data  (read_hash[HWIDTH-1:0]),
  ); */
  hash_conv conv(/*AUTOINST*/);

  /* mem_feat AUTO_TEMPLATE (
      .read_data1   (),
      .write_data1  (write_feat[DWIDTH-1:0]),
      .mem_we1      (mem_feat_we),
      .mem_addr1    (mem_feat_addr_d1[FACCUM-1:0]),
      .read_data2   (read_feat[DWIDTH-1:0]),
      .write_data2  ({DWIDTH{1'b0}}),
      .mem_we2      (1'b0),
      .mem_addr2    (mem_feat_addr[FACCUM-1:0]),
  ); */
  mem_feat mem_feat(/*AUTOINST*/);

  /* accumulator AUTO_TEMPLATE (
      .total    (fmap[DWIDTH-1:0]),
      .result   (result[DWIDTH-1:0]),
      .out_en   (conv_oe),
      .reset    (mem_feat_rst),
      .sum_old  (read_feat[DWIDTH-1:0]),
      .sum_new   (write_feat[DWIDTH-1:0]),
  ); */
  accumulator feat_accum(/*AUTOINST*/);

  /* bias AUTO_TEMPLATE (
      .read_bias  (read_bias[DWIDTH-1:0]),
      .breg_we    (breg_we),
      .out_en     (bias_oe),
      .pixel_in   (fmap[DWIDTH-1:0]),
      .pixel_out  (biased[DWIDTH-1:0]),
  ); */
  bias bias(/*AUTOINST*/);

  /* relu AUTO_TEMPLATE (
      .out_en     (relu_oe),
      .pixel_in   (biased[DWIDTH-1:0]),
      .pixel_out  (actived[DWIDTH-1:0]),
  ); */
  relu relu(/*AUTOINST*/);

  /* linebuf AUTO_TEMPLATE (
      .buf_en     (buf_feat_en),
      .buf_input  (actived[DWIDTH-1:0]),
      .img_size   (w_fea_size[LWIDTH-1:0]),
      .fil_size   (w_pool_size[LWIDTH-1:0]),
      <%- for i in 0...$fsize -%>
      <%-   for j in 0...$fsize -%>
      <%-     if i < $psize && j < $psize -%>
      .buf_output<%=i%>_<%=j%> (pixel_feat<%=i*$psize+j%>[DWIDTH-1:0]),
      <%-     else -%>
      .buf_output<%=i%>_<%=j%> (),
      <%-     end -%>
      <%-   end -%>
      <%- end -%>
  ); */
  linebuf buf_feat(/*AUTOINST*/);

  /* pool AUTO_TEMPLATE (
      .pmap             (pmap[DWIDTH-1:0]),
      .out_en           (pool_oe),
      <%- for i in 0...$psize**2 -%>
      .pixel_feat<%=i%> (pixel_feat<%=i%>[DWIDTH-1:0]),
      <%- end -%>
  ); */
  pool pool(/*AUTOINST*/);

endmodule

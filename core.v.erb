module core(/*AUTOARG*/);
`include "parameters.vh"

    /*AUTOINPUT*/

    /*AUTOOUTPUT*/

    /*AUTOWIRE*/

    /*AUTOREG*/

    // AUTO_CONSTANT (DWIDTH)
    /* conv AUTO_TEMPLATE (
        .fmap      (result[DWIDTH-1:0]),
        .wreg_we   (wreg_we),
        .read_data (read_weight[DWIDTH-1:0]),
    ); */
    conv conv(/*AUTOINST*/);

    /* rdpb18_128x16_g1 AUTO_TEMPLATE (
        .AA   (mem_feat_addr_d1[FACCUM-1:0]),
        .CPA  (clk),
        .CSBA (!mem_feat_we),
        .OEBA (1'b0),
        .WEBA (1'b0),
        .REBA (1'b1),
        .IA   (write_feat[DWIDTH-1:0]),
        .OA   (),
        .AB   (mem_feat_addr[FACCUM-1:0]),
        .CPB  (clk),
        .CSBB (1'b0),
        .OEBB (1'b0),
        .WEBB (1'b1),
        .REBB (1'b0),
        .IB   ({DWIDTH{1'b0}}),
        .OB   (read_feat[DWIDTH-1:0]),
    ); */
    rdpb18_128x16_g1 mem_feat(/*AUTOINST*/);

    /* accumulator AUTO_TEMPLATE (
        .total   (fmap[DWIDTH-1:0]),
        .result  (result[DWIDTH-1:0]),
        .o_we    (conv_we),
        .reset   (mem_feat_rst),
        .sum_old (read_feat[DWIDTH-1:0]),
        .sum_wb  (write_feat[DWIDTH-1:0]),
    ); */
    accumulator feat_accum(/*AUTOINST*/);

    /* linebuf_feat AUTO_TEMPLATE (
        <% for i in 0..3 %>
        .pixel_feat<%=i%> (pixel_feat<%=i%>[DWIDTH-1:0]),
        <% end %>
        .read_data        (fmap[DWIDTH-1:0]),
    ); */
    linebuf_feat buf_feat(/*AUTOINST*/);

    /* pool AUTO_TEMPLATE (
        .pmap             (pmap[DWIDTH-1:0]),
        .o_we             (pool_we),
        <% for i in 0..3 %>
        .pixel_feat<%=i%> (pixel_feat<%=i%>[DWIDTH-1:0]),
        <% end %>
    ); */
    pool pool(/*AUTOINST*/);

endmodule
